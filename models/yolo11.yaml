# Ultralytics YOLO 🚀, AGPL-3.0 license
# YOLO11 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 8 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11.yaml with scale 'n'
  # [depth, width, max_channels]
  
  #  depth深度因子的作用：表示模型中重复模块的数量或层数的缩放比例
  #  width宽度因子的作用：表示模型中通道数的缩放比例
  i: [0.50, 1.00, 256] # 概述:202层,660,200个参数,660,184个梯度,7.4 GFLOPs
# YOLO11 summary: 202 layers, 660,200 parameters, 660,184 gradients, 7.4 GFLOPs
  # n: [0.50, 0.25, 1024] # summary: 319 layers, 2624,080 parameters, 2624064 gradients, 6.6 GFLOPs
  # s: [0.50, 0.50, 1024] # summary: 319 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  # m: [0.50, 1.00, 512] # summary: 409 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  # l: [1.00, 1.00, 512] # summary: 631 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  # x: [1.00, 1.50, 512] # summary: 631 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs

# YOLO11i backbone
backbone:

 - [-1, 1, Conv, [16, 3, 2]] # 0-P1/2
 - [-1, 1, Conv, [32, 3, 2]] # 1-P2/4
 - [-1, 1, Conv, [64, 3, 2]] # 2-P3/8
 - [-1, 1, Conv, [128, 3, 2]] # 3-P4/16
 - [-1, 1, SPPF, [128, 5]] # 4
 - [-1, 2, C2PSA, [128]] # 5

# YOLO11n head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 第6层
  - [[-1, 2], 1, Concat, [1]]  # 第7层
  - [-1, 2, C3k2, [64, False]]  # 第8层

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 第9层
  - [[-1, 1], 1, Concat, [1]]  # 第10层
  - [-1, 2, C3k2, [32, False]]  # 第11层

  - [-1, 1, Conv, [32, 3, 2]]  # 第12层
  - [[-1, 8], 1, Concat, [1]]  # 第13层
  - [-1, 2, C3k2, [64, False]]  # 第14层

  - [-1, 1, Conv, [64, 3, 2]]  # 第15层
  - [[-1, 5], 1, Concat, [1]]  # 第16层
  - [-1, 2, C3k2, [128, False]]  # 第17层

  - [[11, 14, 17], 1, Detect, [nc]] # 检测







